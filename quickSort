#include<stdio.h>
int i,j;
void swap(int *a, int *b)
{
  int temp;
  temp = *a;
  *a = *b;
  *b = temp;
}

int partition(int arr[],int low,int high)
{
  int pivot = arr[high];
  int i = (low - 1);
  for (j=low;j<high;j++)
 {
    if (arr[j]<= pivot) 
    {
      i++;
      swap(&arr[i], &arr[j]);
    }
  }
  swap(&arr[i + 1], &arr[high]);
  return (i + 1);
}
/*
int partition(int arr[],int low,int high) 
{
  
  int pivot = arr[low];
  i = low;
  j=high;
  while(i<j)
  {
  	while(arr[i]<=pivot)
  	{
  		i++;
	}
	while(arr[j]>pivot)
	{
		j--;
	}
	if(i<j)
	{
		swap(&arr[i],&arr[j]);
	}
  }
  swap(&arr[low], &arr[j]);
  
  return j;
}
*/
void quickSort(int arr[], int low, int high)
 {
  if (low < high)
   {
    int pi = partition(arr, low, high);
    quickSort(arr, low, pi - 1);
    quickSort(arr, pi + 1, high);
  }
}

void display(int arr[], int n) 
{
  for (i=0;i<n;i++) 
  {
    printf("%d ", arr[i]);
  }
  printf("\n");
}
int main() 
{
  int arr[100],n;
  printf("Enter the number of elements\n");
  scanf("%d",&n);
  printf("Enter %d elements\n",n);
  for(i=0;i<n;i++)
  {
  	scanf("%d",&arr[i]);
  }
  printf("Elements without sorting are:\n");
  display(arr,n);
  quickSort(arr,0,n-1);
  printf("Sorted list in Ascending Order:\n");
  display(arr,n);
  getch();
  return 0;
}

